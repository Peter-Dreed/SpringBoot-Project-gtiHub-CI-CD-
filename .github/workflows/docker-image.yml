name: Self-Hosted CI/CD Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build_app:
    name: Build Spring Boot App
    runs-on: self-hosted

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Confirm folder exists
        run: |
          echo "Repo root:"
          ls -la
          echo "Spring Boot folder:"
          ls -la spring-boot-demo

      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Maven
        working-directory: spring-boot-demo
        run: mvn clean package -DskipTests


  dockerize:
    name: Dockerize and Push
    needs: build_app
    runs-on: self-hosted

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Docker Login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker Image
        working-directory: spring-boot-demo
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/springboot-demo .

      - name: Push Docker Image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/springboot-demo


  deploy:
    name: Deploy on Server
    needs: dockerize
    runs-on: self-hosted

    steps:
      - name: Docker Login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Stop and Remove Old Container
        run: |
          docker stop springboot_container || true
          docker rm springboot_container || true

      - name: Run New Container
        run: |
          docker run -d \
            --name springboot_container \
            -p 8081:8081 \
            ${{ secrets.DOCKER_USERNAME }}/springboot-demo
