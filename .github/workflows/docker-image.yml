name: Modular Self-Hosted Deploy Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
   steps:
    - name:  Checkout Code
      uses: actions/checkout@v3

    - name:  Build App
      working-directory: ./spring-boot-demo
      run: mvn clean package -DskipTests

    - name:    Set up Java 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name:    Build App
      working-directory: ./spring-boot-demo
      run: mvn clean package -DskipTests

  dockerize:
    name:    Build & Push Docker Image
    needs: build_app
    runs-on: self-hosted

    steps:
    - name:    Checkout Code
      uses: actions/checkout@v3

    - name:    Docker Login
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name:    Build Docker Image
      working-directory: ./spring-boot-demo
      run: docker build -t ${{ secrets.DOCKER_USERNAME }}/springboot-demo .

    - name:    Push Docker Image
      run: docker push ${{ secrets.DOCKER_USERNAME }}/springboot-demo

  deploy:
    name:  Deploy to Self-Hosted Server
    needs: dockerize
    runs-on: self-hosted

    steps:
    - name:  Docker Login
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name:  Stop & Remove Old Container
      run: |
        docker stop springboot_container || true
        docker rm springboot_container || true

    - name:  Run Updated Container
      run: |
        docker run -d \
          --name springboot_container \
          -p 8081:8081 \
          ${{ secrets.DOCKER_USERNAME }}/springboot-demo
