name: Self-Hosted CI/CD Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build_app:
    name: Build Spring Boot App
    runs-on: self-hosted

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Confirm Spring Boot Folder
        run: |
          echo "Checking project layout..."
          ls -la
          ls -la SpringBoot-Project/spring-boot-demo

      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Maven
        working-directory: SpringBoot-Project/spring-boot-demo
        run: mvn clean package -DskipTests

  dockerize:
    name: Build and Push Docker Image
    needs: build_app
    runs-on: self-hosted

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Docker Login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker Image
        working-directory: SpringBoot-Project/spring-boot-demo
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/springboot-demo .

      - name: Push Docker Image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/springboot-demo

  deploy_to_ec2:
    name: Deploy to EC2 with Nginx
    needs: dockerize
    runs-on: ubuntu-latest

    steps:
      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.HOST_ADDRESS }} >> ~/.ssh/known_hosts

      - name: Deploy Container and Configure Nginx
        run: |
          ssh ${{ secrets.HOST_USERNAME }}@${{ secrets.HOST_ADDRESS }} <<EOF

            # Install Nginx if not present
            if ! command -v nginx > /dev/null; then
              sudo apt update && sudo apt install -y nginx
            fi

            # Create Nginx reverse proxy config
            sudo tee /etc/nginx/sites-available/springboot <<'NGINX'
            server {
                listen 80;
                server_name _;

                location / {
                    proxy_pass         http://localhost:8081/;
                    proxy_http_version 1.1;
                    proxy_set_header   Host \$host;
                    proxy_set_header   X-Real-IP \$remote_addr;
                    proxy_set_header   X-Forwarded-For \$proxy_add_x_forwarded_for;
                    proxy_set_header   X-Forwarded-Proto \$scheme;
                }
            }
            NGINX

            # Enable the config
            sudo ln -sf /etc/nginx/sites-available/springboot /etc/nginx/sites-enabled/default
            sudo nginx -t && sudo systemctl restart nginx

            # Deploy Docker container
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            docker stop springboot_container || true
            docker rm springboot_container || true
            docker pull ${{ secrets.DOCKER_USERNAME }}/springboot-demo
            docker run -d \
              --name springboot_container \
              -p 8081:8081 \
              ${{ secrets.DOCKER_USERNAME }}/springboot-demo

          EOF
